##Blood Magic
val bloodRune = <AWWayofTime:AlchemicalWizardrybloodRune>;
val crucibleFire = <AWWayofTime:AlchemicalWizardrytile.blockSpellEffect>;
val unstableSpellEmpowerer = <AWWayofTime:AlchemicalWizardrytile.blockSpellEnhancement>;
val defaultSpellModifier = <AWWayofTime:AlchemicalWizardrytile.blockSpellModifier>;
val particleGenerator = <AWWayofTime:AlchemicalWizardrytile.blockSpellParadigm>;
val bloodAltar = <AWWayofTime:Altar>;
val weakActivationCrystal = <AWWayofTime:activationCrystal>;
val aether = <AWWayofTime:aether>;
val airScribeTool =  <AWWayofTime:airScribeTool>;
val airSigil = <AWWayofTime:airSigil>;
val potionFlask = <AWWayofTime:alchemyFlask>;
val apprenticeBloodOrb = <AWWayofTime:apprenticeBloodOrb>;
val aquasalus = <AWWayofTime:aquasalus>;
val archmageBloodOrb = <AWWayofTime:archmageBloodOrb>;
val armourForge = <AWWayofTime:armourForge>;
val armourInhibitor = <AWWayofTime:armourInhibitor>;
val averageLengtheningCatalyst = <AWWayofTime:averageLengtheningCatalyst>;
val averagePowerCatalyst = <AWWayofTime:averagePowerCatalyst>;
val blankSlate = <AWWayofTime:blankSlate>;
val unboundSpellCrystal = <AWWayofTime:blankSpell>;
val blockSpellConduit = <AWWayofTime:blockConduit>;
val spellTable = <AWWayofTime:blockHomHeart>;
val arcanePedestal = <AWWayofTime:blockPedestal>;
val arcanePlinth = <AWWayofTime:blockPlinth>;
val schematicSaver = <AWWayofTime:blockSchemSaver>;
val teleposer = <AWWayofTime:blockTeleposer>;
val alchemicChemistrySet = <AWWayofTime:blockWritingTable>;
val bloodLight = <AWWayofTime:bloodLight>;
val offensa = <AWWayofTime:bloodMagicBaseAlchemyItems>;
val quartzRod = <AWWayofTime:bloodMagicBaseItems>;
val filledSocket = <AWWayofTime:bloodSocket>;
val bloodStoneBrick = <AWWayofTime:bloodStoneBrick>;
val boundAxe = <AWWayofTime:boundAxe>;
val boundBoots = <AWWayofTime:boundBoots>;
val boundHelmet = <AWWayofTime:boundHelmet>;
val boundLeggings = <AWWayofTime:boundLeggings>;
val boundPickaxe = <AWWayofTime:boundPickaxe>;
val boundPlate = <AWWayofTime:boundPlate>;
val boundShovel = <AWWayofTime:boundShovel>;
val bucketLife = <AWWayofTime:bucketLife>;
val testingOrb = <AWWayofTime:creativeFiller>;
val crepitous = <AWWayofTime:crepitous>;
val crystallos = <AWWayofTime:crystallos>;
val dynamicMace = <AWWayofTime:customTool>;
val daggerSacrifice = <AWWayofTime:daggerOfSacrifice>;
val demonBloodShard = <AWWayofTime:demonBloodShard>;
val demonPlacer = <AWWayofTime:demonPlacer>;
val demonPortalMain = <AWWayofTime:demonPortalMain>;
val demonicSlate = <AWWayofTime:demonicSlate>'
val demonicTelepositionFocus = <AWWayofTime:demonicTelepositionFocus>;
val divinationSigil = <AWWayofTime:divinationSigil>;
val duskScribeTool= <AWWayofTime:duskScribeTool>;
val earthScribeTool = <AWWayofTime:earthScribeTool>;
val efficiencyRune = <AWWayofTime:efficiencyRune>;
val emptySocket = <AWWayofTime:emptySocket>;
val energyBazooka = <AWWayofTime:energyBazooka>;
val energyBlaster = <AWWayofTime:energyBlaster>;
val boundBlade = <AWWayofTime:energySword>;
val enhancedFillingAgent = <AWWayofTime:enhancedFillingAgent>;
val enhancedTelepositionFocus = <AWWayofTime:enhancedTelepositionFocus>;
val fireScribeTool = <AWWayofTime:fireScribeTool>;
val fluidSigil = <AWWayofTime:fluidSigil>;
val  greaterLengtheningCatalyst = <AWWayofTime:greaterLengtheningCatalyst>;
val greaterPowerCatalyst = <AWWayofTime:greaterPowerCatalyst>;
val growthSigil = <AWWayofTime:growthSigil>;
val imbuedSlate = <AWWayofTime:imbuedSlate>;
val imperfectRitualStone = <AWWayofTime:imperfectRitualStone>;
val incendium  = <AWWayofTime:incendium>;
val itemBloodLightSigil  = <AWWayofTime:itemBloodLightSigil>;
val itemComplexSpellCrystal = <AWWayofTime:itemComplexSpellCrystal>;
val keyBinding = <AWWayofTime:itemKeyOfDiablo>;
val itemRitualDiviner = <AWWayofTime:itemRitualDiviner>;
val largeBloodStoneBrick = <AWWayofTime:largeBloodStoneBrick>;
val lavaCrystal = <AWWayofTime:lavaCrystal>;
val lavaSigil = <AWWayofTime:lavaSigil>;
val lifeEssence = <AWWayofTime:lifeEssence>;
val magicales = <AWWayofTime:magicales>;
val magicianBloodOrb = <AWWayofTime:magicianBloodOrb>;
val masterBloodOrb = <AWWayofTime:masterBloodOrb>;
val masterRitualStone = <AWWayofTime:masterStone>;
val mundaneLengtheningCatalyst = <AWWayofTime:mundaneLengtheningCatalyst>;
val mundanePowerCatalyst = <AWWayofTime:mundanePowerCatalyst>;
val reinforcedSlate = <AWWayofTime:reinforcedSlate>;
val reinforcedTelepositionFocus = <AWWayofTime:reinforcedTelepositionFocus>;
val ritualStone = <AWWayofTime:ritualStone>;
val runeOfSacrifice = <AWWayofTime:runeOfSacrifice>;
val runeOfSelfSacrifice = <AWWayofTime:runeOfSelfSacrifice>;
val sacrificialKnife = <AWWayofTime:sacrificialKnife>;
val sanctus = <AWWayofTime:sanctus>;
val sigilSight = <AWWayofTime:seerSigil>;
val sigilOfElementalAffinity = <AWWayofTime:sigilOfElementalAffinity>;
val sigilOfEnderSeverance = <AWWayofTime:sigilOfEnderSeverance>;
val sigilOfHaste = <AWWayofTime:sigilOfHaste>;
val sigilOfHolding = <AWWayofTime:sigilOfHolding>;
val sigilOfMagnetism = <AWWayofTime:sigilOfMagnetism>;
val sigilOfSupression = <AWWayofTime:sigilOfSupression>;
val sigilOfThePhantomBridge = <AWWayofTime:sigilOfTheBridge>;
val sigilOfTheFastMiner = <AWWayofTime:sigilOfTheFastMiner>;
val sigilOfWhirlwind = <AWWayofTime:sigilOfWind>;
val simpleCatalyst = <AWWayofTime:simpleCatalyst>;
val spectralBlock = <AWWayofTime:spectralBlock>;
val spectralContainer = <AWWayofTime:spectralContainer>;
val speedRune = <AWWayofTime:speedRune>;
val standardBindingAgent = <AWWayofTime:standardBindingAgent>;
val standardFillingAgent = <AWWayofTime:standardFillingAgent>;
val telepositionFocus = <AWWayofTime:telepositionFocus>;
val tennebrae = <AWWayofTime:tennebrae>;
val terrae = <AWWayofTime:terrae>;
val voidSigil = <AWWayofTime:voidSigil>;
val waterScribeTool = <AWWayofTime:waterScribeTool>;
val waterSigil = <AWWayofTime:waterSigil>;
val weakBindingAgent = <AWWayofTime:weakBindingAgent>;
val weakBloodOrb = <AWWayofTime:weakBloodOrb>;
val weakBloodShard = <AWWayofTime:weakBloodShard>;
val weakFillingAgent = <AWWayofTime:weakFillingAgent>;

##Baubles
val minersRing = <Baubles:Ring>;

##Botania
val alchemyCatalyst = <Botania:alchemyCatalyst>;
val elvenGatewayCore = <Botania:alfheimPortal>;
val petalApothecary = <Botania:altar>;
val bandAura = <Botania:auraRing>;
val gereaterBandAura = <Botania:auraRingGreater>;
val rodBifrost = <Botania:bifrost>;
val buriedPetals = <Botania:buriedPetals>;
val conjurationCatalyst = <Botania:conjurationCatalyst>;
val hellishBrick = <Botania:customBrick>;
val hellishBrickSlab = <Botania:customBrick0Slab>;
val hellishBrickSlabFull = <Botania:customBrick0SlabFull>;
val hellishBrickStairs = <Botania:customBrick0Stairs>;
val soulBrickSlab = <Botania:customBrick1Slab>;
val soulBrickSlabFull = <Botania:customBrick1SlabFull> ;
val soulBrickStairs = <Botania:customBrick1Stairs> 
val frostyBrickSlab = <Botania:customBrick2Slab>;
val frostyBrickSlabFull = <Botania:customBrick2SlabFull>;
val frostyBrickStairs = <Botania:customBrick2Stairs>;
val roofTileSlab = <Botania:customBrick3Slab> ;
val roofTileSlabFull = <Botania:customBrick3SlabFull>;
val roofTileStairs = <Botania:customBrick3Stairs>;
val rodLands = <Botania:dirtRod>;
val manaDistributor = <Botania:distributor>;
val divaCharm = <Botania:divaCharm>;
val dreamwood = <Botania:dreamwood>;
val dreamwoodSlab = <Botania:dreamwood0Slab>;
val dreamwoodSlabFull = <Botania:dreamwood0SlabFull>;
val dreamwoodStairs = <Botania:dreamwood0Stairs>;
val dreamwoodPlankSlab = <Botania:dreamwood1Slab>;
val dreamwoodPlankSlabFull = <Botania:dreamwood1SlabFull>;
val dreamwoodPlankStairs = <Botania:dreamwood1Stairs>;
val floralPowder = <Botania:dye>;
val elementiumAxe = <Botania:elementiumAxe>;
val elementiumBoots = <Botania:elementiumBoots>;
val elementiumChestplate = <Botania:elementiumChest>;
val elementiumHelm = <Botania:elementiumHelm>;
val elementiumHelmRevealing = <Botania:elementiumHelmReveal>;
val elementiumLeggings = <Botania:elementiumLegs>;
val elementiumPick = <Botania:elementiumPick>;
val elementiumShears = <Botania:elementiumShears>;
val elementiumShovel = <Botania:elementiumShovel>;
val elementiumSword = <Botania:elementiumSword> ;
val manaEnchanter = <Botania:enchanter>;
val soulscribe = <Botania:enderDagger>;
val enderOverseer = <Botania:enderEyeBlock>;
val enderHand = <Botania:enderHand>;
val floralFertilier = <Botania:fertilizer>;
val hellRod = <Botania:fireRod>;
val flugelTiara = <Botania:flightTiara>;
val mysticalFlower = <Botania:flower>;
val drumWild = <Botania:forestDrum>;
val eyeAncients = <Botania:forestEye>;
val goldenLaurel = <Botania:goldenLaurel>;
val hornWild = <Botania:grassHorn>;
val pastureSeeds = <Botania:grassSeeds>;
val snowflakePendant = Botania:icePendant>;
val spectator = <Botania:itemFinder>;
val tectonicGirdle = <Botania:knockbackBelt>;
val laputaShard =  <Botania:laputaShard>;
val pyroclastPendant = <Botania:lavaPendant>;
val manaLens =  <Botania:lens>;
val lexicaBotania = <Botania:lexicon>;
val livingrock = <Botania:livingrock>;
val livingrockSlab = <Botania:livingrock0Slab>;
val livingrockSlabFull = <Botania:livingrock0SlabFull>;
val livingrockStairs = <Botania:livingrock0Stairs>;
val livingrockBrickSlab = <Botania:livingrock1Slab>;
val livingrockBrickSlabFull = <Botania:livingrock1SlabFull>;
val livingrockBrickStairs = <Botania:livingrock1Stairs>;
val livingwood = <Botania:livingwood>;
val livingwoodSlab = <Botania:livingwood0Slab>;
val livingwoodSlabFull = <Botania:livingwood0SlabFull>;
val livingwoodStairs = <Botania:livingwood0Stairs>;
val livingwoodPlanksSlab = <Botania:livingwood1Slab>;
val livingwoodPlanksSlabFull = <Botania:livingwood1SlabFull>;
val livingwoodPlanksStairs = <Botania:livingwood1Stairs>;
val magnetRing = <Botania:magnetRing>;
val unstableBeacon = <Botania:manaBeacon>;
val manaBottle = <Botania:manaBottle>;
val manaCookie =  <Botania:manaCookie>;
val manaDetector = <Botania:manaDetector>;
val manaBlaster = <Botania:manaGun>;
val manaMirror = <Botania:manaMirror>;
val manaPetal = <Botania:manaPetal>;
val manasteelIngot = <Botania:manaResource>;
val manaRing = <Botania:manaRing>;
val greaterManaRing = <Botania:manaRingGreater>;
val manaTablet = <Botania:manaTablet>;
val manaVoid = <Botania:manaVoid>;
val manasteelAxe = <Botania:manasteelAxe>;
val manasteelBoots = <Botania:manasteelBoots>;
val manasteelChestplate = <Botania:manasteelChest>;
val manasteelHelm = <Botania:manasteelHelm>;
val manasteelHelmRevealing = <Botania:manasteelHelmReveal>;
val manasteelLeggings = <Botania:manasteelLegs>;
val manasteelPick = <Botania:manasteelPick>;
val manasteelShears = <Botania:manasteelShears>;
val manasteelShovel = <Botania:manasteelShovel>;
val manasteelSword = <Botania:manasteelSword>;
val floatingFlower = <Botania:miniIsland>;
val ringMantle = <Botania:miningRing>;
val extrapolatedBucket = <Botania:openBucket>;
val openCrate = <Botania:openCrate>;
val pestleAndMortar = <Botania:pestleAndMortar>;
val mysticalPetal = <Botania:petal>;
val forceRelay = <Botania:pistonRelay>;
val greatFairyRing = <Botania:pixieRing>;
val abstrusePlatform = <Botania:platform>;
val prismarine = <Botania:prismarine>;
val prismarineSlab = <Botania:prismarine0Slab>;
val prismarineSlabFull = <Botania:prismarine0SlabFull>;
val prismarineStairs = <Botania:prismarine0Stairs>;
val prismarineBrickSlab = <Botania:prismarine1Slab>;
val prismarineBrickSlabFull = <Botania:prismarine1SlabFull>;
val prismarineBrickStairs = <Botania:prismarine1Stairs>;
val darkPrismarineSlab = <Botania:prismarine2Slab>;
val darkPrismarineSlabFull = <Botania:prismarine2SlabFull> ;
val darkPrismarineStairs = <Botania:prismarine2Stairs>;
val manaPylon = <Botania:pylon>;
val smokyQuartz = <Botania:quartz>;
val blazeQuartzSlabFull = <Botania:quartzSlabBlazeFull>;
val blazeQuartzSlab = <Botania:quartzSlabBlazeHalf>;
val smokeyQuartzSlabFull = <Botania:quartzSlabDarkFull>;
val smokeyQuartzSlab = <Botania:quartzSlabDarkHalf>;
val elfQuartzSlabFull = <Botania:quartzSlabElfFull>;
val elfQuartzSlab = <Botania:quartzSlabElfHalf>;
val lavenderQuartzSlabFull = <Botania:quartzSlabLavenderFull>;
val lavenderQuartzSlab = <Botania:quartzSlabLavenderHalf>;
val manaQuartzSlabFull = <Botania:quartzSlabManaFull>;
val manaQuartzSlab = <Botania:quartzSlabManaHalf>;
val redQuartzSlabFull = <Botania:quartzSlabRedFull>;
val redQuartzSlab = <Botania:quartzSlabRedHalf>;
val blazeQuartzStairs = <Botania:quartzStairsBlaze>;
val smokeyQuartzStairs = <Botania:quartzStairsBlaze>;	
val elfQuartzStairs = <Botania:quartzStairsElf>;
val lavenderQuartzStairs = <Botania:quartzStairsLavender>;
val manaQuartzStairs = <Botania:quartzStairsMana>;
val redQuartzStairs = <Botania:quartzStairsRed>;
val blazeQuartzBlock = <Botania:quartzTypeBlaze>;
val smokeyQuartzBlock = <Botania:quartzTypeDark>;
val elfQuartzBlock = <Botania:quartzTypeDark>;
val lavenderQuartzBlock = <Botania:quartzTypeLavender>;
val manaQuartzBlock = <Botania:quartzTypeMana>;
val redQuartzBlock = <Botania:quartzTypeRed>;
val rainbowRod = <Botania:rainbowRod>;
val farReachRing = <Botania:reachRing>;
val reedBlock = <Botania:reedBlock>;
val reedSlab = <Botania:reedBlock0Slab>;
val reedSlabFull = <Botania:reedBlock0SlabFull>;
val reedStairs = <Botania:reedBlock0Stairs>;
val rune = <Botania:rune>;
val runicAltar = <Botania:runeAltar>;
val seaLantern = <Botania:seaLamp>;
val glimmeringFlower = <Botania:shinyFlower>;
val signalFlare = <Botania:signalFlare>;
val rodHighlands = <Botania:skyDirtRod>;
val slingshot = <Botania:slingshot>;
val solidVine = <Botania:solidVine>;
val lifeImbuer = <Botania:spawnerClaw>;
val lifeAggregator = <Botania:spawnerMover>;
val botaniaFlower = <Botania:specialFlower>
val manaSpreader = <Botania:spreader>;
val crimsonPendant = <Botania:superLavaPendant>;
val globetrotterSash = <Botania:superTravelBelt>;
val terraPick = <Botania:terraPick>;
val terraSword = <Botania:terraSword>;
val terrafirmaRod = <Botania:terraformRod>;
val terrasteelBoots = <Botania:terrasteelBoots>;
val terrasteelChestplate = <Botania:terrasteelChest>;
val terrasteelHelm = <Botania:terrasteelHelm>;
val terrasteelHelmRevealing = <Botania:terrasteelHelmReveal>;
val terrasteelLegs = <Botania:terrasteelLegs>;
val thatch = <Botania:thatch>;
val thatchSlab = <Botania:thatch0Slab>;
val thatchSlabFull = <Botania:thatch0SlabFull>;
val thatchStairs = <Botania:thatch0Stairs>;
val tinyPlanet = <Botania:tinyPlanet>;
val tinyPlanetBlock = <Botania:tinyPlanetBlock>;
val tinyPotato = <Botania:tinyPotato>;
val skiesRod = <Botania:tornadoRod>;
val soujournersSash = <Botania:travelBelt>
val turntable = <Botania:turntable>;
val wandForest = <Botania:twigWand>;
val unstableCube = <Botania:unstableBlock>;
val vineBall = <Botania:vineBall>;
val necrodermalVirus = <Botania:virus>;
val chordataRing = <Botania:waterRing>;
val seasRod = <Botania:waterRod>;

##Buildcraft
val architectTable = <BuildCraft|Builders:architectBlock>;
val blueprint = <BuildCraft|Builders:blueprintItem>;
val builder = <BuildCraft|Builders:builderBlock>;
val filler = <BuildCraft|Builders:fillerBlock>;
val blueprintLibrary = <BuildCraft|Builders:libraryBlock>;
val landMark = <BuildCraft|Builders:markerBlock>;
val null = <BuildCraft|Builders:null>;
val pathMarker = <BuildCraft|Builders:pathMarkerBlock>;
val template = <BuildCraft|Builders:templateItem>;
val diamondGear =  <BuildCraft|Core:diamondGearItem>;
val eternalSpring = <BuildCraft|Core:eternalSpring>;
val goldGear = <BuildCraft|Core:goldGearItem> -- Gold Gear
val ironGear = <BuildCraft|Core:ironGearItem>;
val stoneGear =  <BuildCraft|Core:stoneGearItem>;
val woodGear = <BuildCraft|Core:woodenGearItem>;
val wrench = <BuildCraft|Core:wrenchItem>;
val fuel = <BuildCraft|Energy:blockFuel>;
val oil = <BuildCraft|Energy:blockOil>;
val redPlasma = <BuildCraft|Energy:blockRedPlasma>;
val fuelBucket = <BuildCraft|Energy:bucketFuel> ;
val oilBucket = <BuildCraft|Energy:bucketOil>;
val energyConverter = <BuildCraft|Energy:energyConverter>;
val engine = <BuildCraft|Energy:engineBlock>;
val autoWorkbench = <BuildCraft|Factory:autoWorkbenchBlock>;
val chute = <BuildCraft|Factory:blockHopper>;
val floodGate = <BuildCraft|Factory:floodGateBlock>;
val frame = <BuildCraft|Factory:frameBlock>;
val quarry = <BuildCraft|Factory:machineBlock>;
val miningWell = <BuildCraft|Factory:miningWellBlock>;
val miningPipe = <BuildCraft|Factory:plainPipeBlock>;
val pump = <BuildCraft|Factory:pumpBlock>;
val refinery = <BuildCraft|Factory:refineryBlock>;
val tank = <BuildCraft|Factory:tankBlock>;
val laser = <BuildCraft|Silicon:laserBlock>;
val assemblyTable = <BuildCraft|Silicon:null>;
val redstoneChipset = <BuildCraft|Silicon:redstoneChipset>;
val filteredBuffer = <BuildCraft|Transport:filteredBufferBlock>;
val cobblestoneFluidPipe = <BuildCraft|Transport:item.buildcraftPipe.pipefluidscobblestone>;
val emeraldFluidPipe =  <BuildCraft|Transport:item.buildcraftPipe.pipefluidsemerald>;
val goldenFluidPipe = <BuildCraft|Transport:item.buildcraftPipe.pipefluidsgold>;
val ironFluidPipe = <BuildCraft|Transport:item.buildcraftPipe.pipefluidsiron>;
val sandstoneFluidPipe = <BuildCraft|Transport:item.buildcraftPipe.pipefluidssandstone>;
val stoneFluidPipe = <BuildCraft|Transport:item.buildcraftPipe.pipefluidsstone>;
val voidFluidPipe = <BuildCraft|Transport:item.buildcraftPipe.pipefluidsvoid>;
val woodFluidPipe = <BuildCraft|Transport:item.buildcraftPipe.pipefluidswood>;

val cobblestoneTransportPipe = <BuildCraft|Transport:item.buildcraftPipe.pipeitemscobblestone>;

val daizuliTransportPipe = <BuildCraft|Transport:item.buildcraftPipe.pipeitemsdaizuli>;
val diamondTranspotPipe = <BuildCraft|Transport:item.buildcraftPipe.pipeitemsdiamond>;
val emeraldTransportPipe = <BuildCraft|Transport:item.buildcraftPipe.pipeitemsemerald>;
val emzuliTransportPipe = <BuildCraft|Transport:item.buildcraftPipe.pipeitemsemzuli>;
val goldTransportPipe = <BuildCraft|Transport:item.buildcraftPipe.pipeitemsgold>;
val ironTransportPipe = <BuildCraft|Transport:item.buildcraftPipe.pipeitemsiron>;
val lazuliTransportPipe = <BuildCraft|Transport:item.buildcraftPipe.pipeitemslapis>;
val obsidianTransportPipe =  <BuildCraft|Transport:item.buildcraftPipe.pipeitemsobsidian>;
val quartzTransportPipe = <BuildCraft|Transport:item.buildcraftPipe.pipeitemsquartz>;
val sandstoneTransportPipe = <BuildCraft|Transport:item.buildcraftPipe.pipeitemssandstone>;
val stoneTransportPipe = <BuildCraft|Transport:item.buildcraftPipe.pipeitemsstone>;
val stripesTransportPipe = <BuildCraft|Transport:item.buildcraftPipe.pipeitemsstripes>;
val voidTransportPipe =  <BuildCraft|Transport:item.buildcraftPipe.pipeitemsvoid>;
val woodTransportPipe =  <BuildCraft|Transport:item.buildcraftPipe.pipeitemswood>;

val cobblestoneKinesisPipe = <BuildCraft|Transport:item.buildcraftPipe.pipepowercobblestone>;

val diamondKinesisPipe = <BuildCraft|Transport:item.buildcraftPipe.pipepowerdiamond>;
val goldenKinesisPipe = <BuildCraft|Transport:item.buildcraftPipe.pipepowergold>;
val ironKinesisPipe = <BuildCraft|Transport:item.buildcraftPipe.pipepoweriron>;
val quartzKinesisPipe = <BuildCraft|Transport:item.buildcraftPipe.pipepowerquartz>;
val stoneKinesisPipe = <BuildCraft|Transport:item.buildcraftPipe.pipepowerstone>;
val woodKinesisPipe = <BuildCraft|Transport:item.buildcraftPipe.pipepowerwood>;

val cobblestoneStructurePipe = <BuildCraft|Transport:item.buildcraftPipe.pipestructurecobblestone>;

val pipeBlock = <BuildCraft|Transport:pipeBlock>;
val facade = <BuildCraft|Transport:pipeFacade>;
val basicGate = <BuildCraft|Transport:pipeGate>;
val pipePlug = <BuildCraft|Transport:pipePlug>;
val pipeSealant = <BuildCraft|Transport:pipeWaterproof>;
val pipeWire = <BuildCraft|Transport:pipeWire>;

##Carpenter’s Blocks
val carpentersBarrier = <CarpentersBlocks:blockCarpentersBarrier>;
val carpentersBed = <CarpentersBlocks:blockCarpentersBed>;
val carpentersBlock = <CarpentersBlocks:blockCarpentersBlock>;
val carpentersButton = <CarpentersBlocks:blockCarpentersButton>
val collapsibleBlock = <CarpentersBlocks:blockCarpentersCollapsibleBlock>;
val carpentersDaylightSensor = <CarpentersBlocks:blockCarpentersDaylightSensor>;
val carpentersDoor = <CarpentersBlocks:blockCarpentersDoor>;
val carpentersFlowerPot = <CarpentersBlocks:blockCarpentersFlowerPot>;
val carpentersGate = <CarpentersBlocks:blockCarpentersGate>;
val carpentersHatch =  <CarpentersBlocks:blockCarpentersHatch>;
val carpentersLadder = <CarpentersBlocks:blockCarpentersLadder>;
val carpentersLever = <CarpentersBlocks:blockCarpentersLever>;
val carpentersPressurePlate = <CarpentersBlocks:blockCarpentersPressurePlate>;
val carpentersSafe = <CarpentersBlocks:blockCarpentersSafe>;
val carpentersSlope = <CarpentersBlocks:blockCarpentersSlope>;
val carpentersStairs =  <CarpentersBlocks:blockCarpentersStairs>;
val carpentersTorch = <CarpentersBlocks:blockCarpentersTorch>;
val itemCarpentersBed = <CarpentersBlocks:itemCarpentersBed>;
val carpentersChisel = <CarpentersBlocks:itemCarpentersChisel>;
val itemCarpentersDoor = <CarpentersBlocks:itemCarpentersDoor>;
val carpentersHammer = <CarpentersBlocks:itemCarpentersHammer>;
val carpentersTile = <CarpentersBlocks:itemCarpentersTile>;

##ComputerCraft
val ccCable = <ComputerCraft:CC-Cable>;
val ccComputer = <ComputerCraft:CC-Computer>;
val ccPeripheral = <ComputerCraft:CC-Peripheral>;
val ccTurtle = <ComputerCraft:CC-Turtle>; 
val ccTurtleAdvanced = <ComputerCraft:CC-TurtleAdvanced>;
val ccTurtleExpanded = <ComputerCraft:CC-TurtleExpanded>;
val disk = <ComputerCraft:disk>;
val diskExpanded = <ComputerCraft:diskExpanded>;
val pocketComputer = <ComputerCraft:pocketComputer>;
val printout = <ComputerCraft:printout>;
val treasureDisk = <ComputerCraft:treasureDisk>

##Ender Storage
val esEnderChest = <EnderStorage:enderChest>
val enderPouch = <EnderStorage:enderPouch>;

##ExtraUtilities
val angelBlock = <ExtraUtilities:angelBlock>;
val angelRing = <ExtraUtilities:angelRing>;
val bedrockiumIngot = <ExtraUtilities:bedrockiumIngot>;
val blockBedrockium = <ExtraUtilities:block_bedrockium>;
val budOff = <ExtraUtilities:budoff>;
val buildersWand = <ExtraUtilities:builderswand>;
val chandelier = <ExtraUtilities:chandelier>;
val cobblestoneCompressed = <ExtraUtilities:cobblestone_compressed>;
val colorStoneBrick = <ExtraUtilities:colorStoneBrick>;
val colorWoodPlanks = <ExtraUtilities:colorWoodPlanks>;
val conveyor = <ExtraUtilities:conveyor>;
val creativeBuildersWand = <ExtraUtilities:creativebuilderswand>;
val cursedEarthSide = <ExtraUtilities:cursedearthside>;
val curtains = <ExtraUtilities:curtains>;
val darkPortal = <ExtraUtilities:dark_portal>;
val dataBlock = <ExtraUtilities:datablock>;
val decorativeBlock1 = <ExtraUtilities:decorativeBlock1>;
val decorativeBlock2 = <ExtraUtilities:decorativeBlock2>;
val defoliageAxe = <ExtraUtilities:defoliageAxe>;
val destructionPickaxe = <ExtraUtilities:destructionpickaxe>;
val divisionSigil = <ExtraUtilities:divisionSigil>
val drum = <ExtraUtilities:drum>;
val endConstructor = <ExtraUtilities:endConstructor>;
val endMarker = <ExtraUtilities:endMarker>;
val  enderQuarry = <ExtraUtilities:enderQuarry>;
val enderThermicPump = <ExtraUtilities:enderThermicPump>;
val erosionShovel = <ExtraUtilities:erosionShovel>;
val etherealGlass = <ExtraUtilities:etherealglass>;
val ethericSword = <ExtraUtilities:ethericsword>;
val extractorBase = <ExtraUtilities:extractor_base>;
val extractorBaseRemote = <ExtraUtilities:extractor_base_remote>;
val filing = <ExtraUtilities:filing>;
val generator = <ExtraUtilities:generator>;
val generator64 = <ExtraUtilities:generator.64>;
val generator8 = <ExtraUtilities:generator.8>;
val goldenBag = <ExtraUtilities:golden_bag>;
val goldenLasso = <ExtraUtilities:golden_lasso>;
val greenScreen = <ExtraUtilities:greenscreen>;
val heatingElement = <ExtraUtilities:heatingElement>;
val magnumTorch = <ExtraUtilities:magnumTorch>;
val microBlocks = <ExtraUtilities:microblocks>;
val miniSoul = <ExtraUtilities:mini-soul>;
val nodeUpgrade = <ExtraUtilities:nodeUpgrade>;
val paintbrush = <ExtraUtilities:paintbrush>;
val peacefulTableTop = <ExtraUtilities:peaceful_table_top>;
val pipes = <ExtraUtilities:pipes>;
val pipes1 = <ExtraUtilities:pipes.1>;
val plantEnderLilly = <ExtraUtilities:plant/ender_lilly>;
val pure

##Fishing Nets
val fishingNet = <FishingNets:fishing_nets>;
val upgrade = <FishingNets:upgrade>;

##Forestry
val adventurerBackpack = <Forestry:adventurerBackpack>;
val wovenAdventurerBackpack = <Forestry:adventurerBackpackT2>;
val ambrosia = <Forestry:ambrosia>;
val apatite = <Forestry:apatite>;
val apiaristBag = <Forestry:apiaristBag>;
val apiaristBoots = <Forestry:apiaristBoots>;
val apiaristChestplate = <Forestry:apiaristChest>;
val apiaristHelmet =  <Forestry:apiaristHelmet>;
val apiaristLeggings = <Forestry:apiaristLegs>;
val ash = <Forestry:ash>;
val beeCombs = <Forestry:beeCombs>;
val beeDrone = <Forestry:beeDroneGE>
val beeLarvae = <Forestry:beeLarvaeGE>;
val beePrincess = <Forestry:beePrincessGE>;
val beeQueen = <Forestry:beeQueenGE>;
val beealyzer = <Forestry:beealyzer>;
val beeswax = <Forestry:beeswax>;
val biofuelCan = <Forestry:biofuelCan>;
val biomassCan = <Forestry:biomassCan>;
val bituminousPeat = <Forestry:bituminousPeat>;
val brokenBronzePick = <Forestry:brokenBronzePickaxe>;
val brokenBronzeShovel =  <Forestry:brokenBronzeShovel>;
val bronzePick = <Forestry:bronzePickaxe>;
val bronzeShovel = <Forestry:bronzeShovel>;
val biofuelBucket = <Forestry:bucketBiofuel>;
val biomassBucket = <Forestry:bucketBiomass>;
val builderBackpack = <Forestry:builderBackpack>;
val  wovenBuilderBackpack = <Forestry:builderBackpackT2>;
val butterfly = <Forestry:butterflyGE>;
val can =  <Forestry:canEmpty>;
val fuelCan =  <Forestry:canFuel>;
val honeyCan = <Forestry:canHoney>;
val iceCan = <Forestry:canIce>;
val juiceCan = <Forestry:canJuice>;
val lavaCan = <Forestry:canLava>;
val oilCan = <Forestry:canOil>;
val seedOilCan = <Forestry:canSeedOil>
val carton = <Forestry:carton>;
val catalogue = <Forestry:catalogue>;
val caterpillar = <Forestry:caterpillarGE>;
val chipset = <Forestry:chipsets>;
val pulsatingDust = <Forestry:craftingMaterial>;
val crate = <Forestry:crate>;
val cratedApatite = <Forestry:cratedApatite>;
val cratedApples = <Forestry:cratedApples>;
val cratedAsh = <Forestry:cratedAsh>;
val cratedBeeswax = <Forestry:cratedBeeswax>;
val cratedBogearth = <Forestry:cratedBogearth>;
val cratedBrass = <Forestry:cratedBrass>;
val cratedBrick = <Forestry:cratedBrick>;
val cratedBronze = <Forestry:cratedBronze>;
val cratedCacti = <Forestry:cratedCacti>;
val cratedCharcoal = <Forestry:cratedCharcoal>;
val cratedClay = <Forestry:cratedClay>
val cratedCoal = <Forestry:cratedCoal>;
val cratedCobblestone = <Forestry:cratedCobblestone>;
val cratedCocoaComb = <Forestry:cratedCocoaComb>;
val cratedCookies = <Forestry:cratedCookies>;
val cratedCopper = <Forestry:cratedCopper>;
val cratedDirt = <Forestry:cratedDirt>;
val cratedDrippingCombs = <Forestry:cratedDrippingCombs>;
val cratedFertilizer = <Forestry:cratedFertilizer>;
val cratedFrozenCombs = <Forestry:cratedFrozenCombs>;
val cratedGlowstone = <Forestry:cratedGlowstone>;
val cratedGravel =  <Forestry:cratedGravel>;
val cratedHoneycombs = <Forestry:cratedHoneycombs>;
val cratedHoneydew = <Forestry:cratedHoneydew>;
val cratedHumus = <Forestry:cratedHumus>;
val cratedLapis = <Forestry:cratedLapis>;
val cratedMulch = <Forestry:cratedMulch>;
val cratedMycelium = <Forestry:cratedMycelium>;
val cratedNetherbrick = <Forestry:cratedNetherbrick>;
val cratedNetherrack = <Forestry:cratedNetherrack>;
val cratedNetherwart = <Forestry:cratedNetherwart> ;
val cratedNikolite = <Forestry:cratedNikolite>;
val cratedObsidian = <Forestry:cratedObsidian>;
val cratedPeat = <Forestry:cratedPeat>;
val cratedPhosphor = <Forestry:cratedPhosphor>;
val cratedPollen = <Forestry:cratedPollen>;
val cratedPropolis = <Forestry:cratedPropolis>;
val cratedRedstone = <Forestry:cratedRedstone>;
val cratedReeds = <Forestry:cratedReeds>;
val cratedRefractoryWax = <Forestry:cratedRefractoryWax>;
val cratedResin = <Forestry:cratedResin>;
val cratedRoyalJelly = <Forestry:cratedRoyalJelly>;
val cratedRubber = <Forestry:cratedRubber> ;
val cratedSand = <Forestry:cratedSand>;
val cratedSandstone = <Forestry:cratedSandstone>;
val cratedSaplings = <Forestry:cratedSaplings>;
val cratedScrap = <Forestry:cratedScrap>;
val  cratedSeeds = <Forestry:cratedSeeds>;
val cratedSilver = <Forestry:cratedSilver>;
val cratedSimmeringCombs = <Forestry:cratedSimmeringCombs>;
cal cratedSoulsand = <Forestry:cratedSoulsand>;
val cratedStone = <Forestry:cratedStone>;
val cratedStringyCombs = <Forestry:cratedStringyCombs>;
val cratedTin = <Forestry:cratedTin>;
val cratedUUM = <Forestry:cratedUUM>;
val cratedWheat = <Forestry:cratedWheat>;
val cratedWood = <Forestry:cratedWood>;
val decayingWheat = <Forestry:decayingWheat>;
val diggerBag = <Forestry:diggerBag>;
val wovenDiggerBag = <Forestry:diggerBagT2>;
val compost = <Forestry:fertilizerBio>;
val fertilizer = <Forestry:fertilizerCompound>;
val flutterlyzer = <Forestry:flutterlyzer>;
val foresterBag = <Forestry:foresterBag>;
val wovenForesterBag = <Forestry:foresterBagT2>;
val frameImpregnated = <Forestry:frameImpregnated>;
val frameProven = <Forestry:frameProven>;
val frameUntreated = <Forestry:frameUntreated>;
val fruit = <Forestry:fruits>;
val bronzeGear = <Forestry:gearBronze>;
val copperGear = <Forestry:gearCopper>;
val tinGear = <Forestry:gearTin>;
val grafter = <Forestry:grafter>;
val grafterProven= <Forestry:grafterProven>;
val hardenedCasing = <Forestry:hardenedMachine>;
val honeyDrop =  <Forestry:honeyDrop>;
val honeyPot =  <Forestry:honeyPot>;
val honeydew = <Forestry:honeydew>;
val honeyedSlice = <Forestry:honeyedSlice>;
val hunterBag = <Forestry:hunterBag>;
val wovenHunterBag= <Forestry:hunterBagT2>;
val impregnatedCasing = <Forestry:impregnatedCasing>;
val imprinter = <Forestry:imprinter>;
val infuser = <Forestry:infuser>;
val bronzeIngot = <Forestry:ingotBronze>;
val copperIngot = <Forestry:ingotCopper>;
val tinIngot = <Forestry:ingotTin>;
val iodineCapsule = <Forestry:iodineCapsule>;
val kitPickaxe = <Forestry:kitPickaxe>;
val kitShovel = <Forestry:kitShovel>;
val lepidopteristBag = <Forestry:lepidopteristBag>;
val letter = <Forestry:letters>;
val minerBag = <Forestry:minerBag>;
val wovenMinerBag = <Forestry:minerBagT2>;
val mouldyWheat = <Forestry:mouldyWheat>;
val mulch =  <Forestry:mulch>;
val spectacles =  <Forestry:naturalistHelmet>;
val impregnatedStick = <Forestry:oakStick> ;
val peat = <Forestry:peat>;
val phosphor = <Forestry:phosphor>;
val pipette = <Forestry:pipette>;
val pollen = <Forestry:pollen>;
val pollenFertile = <Forestry:pollenFertile>;
val propolis = <Forestry:propolis>;
val refractoryBiofuel = <Forestry:refractoryBiofuel>;
val refractoryBiomass = <Forestry:refractoryBiomass>;
val refractoryEmpty = <Forestry:refractoryEmpty>;
val refractoryFuel = <Forestry:refractoryFuel>;
val refractoryHoney = <Forestry:refractoryHoney>;
val refractoryIce = <Forestry:refractoryIce>;
val refractoryJuice = <Forestry:refractoryJuice>;
val refractoryLava = <Forestry:refractoryLava>;
val refractoryOil = <Forestry:refractoryOil>;
val refractorySeedOil =  <Forestry:refractorySeedOil>;
val refractoryWater = <Forestry:refractoryWater>;
val refractoryWax = <Forestry:refractoryWax>;
val researchNote = <Forestry:researchNote>;
val royalJelly = <Forestry:royalJelly>;
val sapling = <Forestry:sapling>;
val scoop =  <Forestry:scoop>;
val serum = <Forestry:serumGE>;
val shortMead = <Forestry:shortMead>;
val solderingIron = <Forestry:solderingIron>;
val stamp = <Forestry:stamps>;
val sturdyCasing = <Forestry:sturdyMachine>;
val thermionicTubes = <Forestry:thermionicTubes>;
val alveary = <Forestry:tile.alveary>;
val beeHives = <Forestry:tile.beehives>;
val candle = <Forestry:tile.candle>;
val farmBlock = <Forestry:tile.ffarm>;
val apiary = <Forestry:tile.for.apiculture>;
val arboristsChest = <Forestry:tile.for.arboriculture>;
val analyzer = <Forestry:tile.for.core>;
val electricalEngine =  <Forestry:tile.for.engine>;
val bottler = <Forestry:tile.for.factory>;
val thermionicFabricator = <Forestry:tile.for.factory2>;
val larchFence = <Forestry:tile.for.fences>;
val mahoeFence = <Forestry:tile.for.fences2>;
val lepidopteristsChest = <Forestry:tile.for.lepidopterology>;
val larchWood = <Forestry:tile.for.log1>;
val chestnutWood = <Forestry:tile.for.log2>;
val kapokWood =  <Forestry:tile.for.log3>;
val willowWood = <Forestry:tile.for.log4>;
val mahoeWood = <Forestry:tile.for.log5>;
val pineWood = <Forestry:tile.for.log6>;
val wood24 = <Forestry:tile.for.log7>;
val mailbox = <Forestry:tile.for.mail>;
val larchWoodPlanks = <Forestry:tile.for.planks>;
val mahoeWoodPlanks = <Forestry:tile.for.planks2>;
val pods =  <Forestry:tile.for.pods>;
val larchWoodSlab = <Forestry:tile.for.slabs1>;
val kapokWoodSlab = <Forestry:tile.for.slabs2>;
val mahoeWoodSlab = <Forestry:tile.for.slabs3>;
val larchStairs = <Forestry:tile.for.stairs>;
val forestryLeaves = <Forestry:tile.leaves>;
val apatiteOre = <Forestry:tile.resources>;
val forestrySapling = <Forestry:tile.saplingGE>;
val humus = <Forestry:tile.soil>;
val forestryStainedGlass = <Forestry:tile.stained>;
val candleStump = <Forestry:tile.stump>;
val treealyzer = <Forestry:treealyzer>;
val catalyst = <Forestry:vialCatalyst>;
val waterCan = <Forestry:waterCan>;
val waxCapsule =  <Forestry:waxCapsule>;
val waxCapsuleBiofuel = <Forestry:waxCapsuleBiofuel>;
val waxCapsuleBiomass = <Forestry:waxCapsuleBiomass>;
val waxCapsuleFuel = <Forestry:waxCapsuleFuel>;
val waxCapsuleHoney = <Forestry:waxCapsuleHoney>;
val waxCapsuleIce = <Forestry:waxCapsuleIce>; 
val waxCapsuleJuice = <Forestry:waxCapsuleJuice>;
val waxCapsuleOil  = <Forestry:waxCapsuleOil>;
val waxCapsuleSeedOil = <Forestry:waxCapsuleSeedOil>;
val waxCapsuleWater = <Forestry:waxCapsuleWater>;
val waxCast = <Forestry:waxCast>;
val woodPulp = <Forestry:woodPulp>;
val wrench = <Forestry:wrench>;

##Forge Microblock
val microblock = <ForgeMicroblock:microblock>;
val sawDiamond = <ForgeMicroblock:sawDiamond>;
val sawIron = <ForgeMicroblock:sawIron>;
val sawStone = <ForgeMicroblock:sawStone>;
val stoneRod =  <ForgeMicroblock:stoneRod>;

##Iron Chests
val ironChest = <IronChest:BlockIronChest>;
val copperIronUpgrade = <IronChest:copperIronUpgrade>;
val copperSilverUpgrade = <IronChest:copperSilverUpgrade>;
val diamondCrystalUpgrade = <IronChest:diamondCrystalUpgrade>;
val diamondObsidianUpgrade = <IronChest:diamondObsidianUpgrade>;
val goldDiamondUpgrade = <IronChest:goldDiamondUpgrade>;
val ironGoldUpgrade = <IronChest:ironGoldUpgrade>l
val silverGoldUpgrade = <IronChest:silverGoldUpgrade>;
val woodCopperUpgrade = <IronChest:woodCopperUpgrade>;
val woodIronUpgrade = <IronChest:woodIronUpgrade>;

##Mantle
val mantleBook = <Mantle:mantleBook>;

##Mekanism
val armoredJetpack = <Mekanism:ArmoredJetpack>;
val atomicDisassembler = <Mekanism:AtomicDisassembler>;
val Balloon = <Mekanism:Balloon>;
val osmiumBlock = <Mekanism:BasicBlock>;
val salinationBlock = <Mekanism:BasicBlock2>;
val mekBiofuel = <Mekanism:BioFuel>;
val boundingBlock = <Mekanism:BoundingBlock>;
val brineBucket = <Mekanism:BrineBucket>;
val cardboardBox = <Mekanism:CardboardBox>;
val oreClump = <Mekanism:Clump>;
val compressedCarbon = <Mekanism:CompressedCarbon>;
val compressedDiamond = <Mekanism:CompressedDiamond>;
val compressedObsidian = <Mekanism:CompressedObsidian>;
val compressedRedstone = <Mekanism:CompressedRedstone>;
val configurator = <Mekanism:Configurator>;
val controlCircuit = <Mekanism:ControlCircuit>;
val oreCrystal = <Mekanism:Crystal>;
val dictionary = <Mekanism:Dictionary>;
val oreDirtyDust = <Mekanism:DirtyDust>;
val oreDust = <Mekanism:Dust>;
val electricBow = <Mekanism:ElectricBow>; 
val electrolyticCore =  <Mekanism:ElectrolyticCore>;
val energyCube = <Mekanism:EnergyCube>;
val energyTablet = <Mekanism:EnergyTablet>
val energyUpgrade = <Mekanism:EnergyUpgrade>;
val enrichedAlloy = <Mekanism:EnrichedAlloy>;
val enrichedIron = <Mekanism:EnrichedIron>;
val filterCard = <Mekanism:FilterCard>;
val frictionBoots = <Mekanism:FrictionBoots>;
val gasMask = <Mekanism:GasMask>;
val gasTank = <Mekanism:GasTank>;
val glowPanel = <Mekanism:GlowPanel>;
val glowPlasticBlock = <Mekanism:GlowPlasticBlock>;
val ingot = <Mekanism:Ingot>;
val mekItemProxy = <Mekanism:ItemProxy>;
val jetpack =  <Mekanism:Jetpack>;
val enrichmentChamber = <Mekanism:MachineBlock>;
val rotaryCondensentrator = <Mekanism:MachineBlock2>;
val networkReader = <Mekanism:NetworkReader>;
val obsidianTNT = <Mekanism:ObsidianTNT>;
val oreBlock = <Mekanism:OreBlock>;
val cable = <Mekanism:PartTransmitter>;
val plasticBlock = <Mekanism:PlasticBlock>;
val plasticFence = <Mekanism:PlasticFence>;
val hdpePellet = <Mekanism:Polyethene>;
val portableTeleporter = <Mekanism:PortableTeleporter>;
val reinforcedAlloy = <Mekanism:ReinforcedAlloy>;
val reinforcedPlasticBlock = <Mekanism:ReinforcedPlasticBlock>;
val roadPlasticBlock = <Mekanism:RoadPlasticBlock>;
val robit = <Mekanism:Robit>;
val salt = <Mekanism:Salt>;
val saltBlock = <Mekanism:SaltBlock>;
val sawdust = <Mekanism:Sawdust>;
val scubaTank = <Mekanism:ScubaTank>;
val seismicReader = <Mekanism:SeismicReader>;
val oreShard = <Mekanism:Shard>;
val slickPlasticBlock = <Mekanism:SlickPlasticBlock>;
val speedUpgrade = <Mekanism:SpeedUpgrade>;
val substrate = <Mekanism:Substrate>;
val teleportationCore = <Mekanism:TeleportationCore>;
val walkieTalkie = <Mekanism:WalkieTalkie>;
val heatGenerator = <MekanismGenerators:Generator>;
val solarPanel = <MekanismGenerators:SolarPanel>;
val bronzeAxe = <MekanismTools:BronzeAxe>;
val bronzeBoots = <MekanismTools:BronzeBoots>;
val bronzeChestplate = <MekanismTools:BronzeChestplate>;
val bronzeHelmet = <MekanismTools:BronzeHelmet>;
val bronzeHoe = <MekanismTools:BronzeHoe>;
val bronzeLeggings = <MekanismTools:BronzeLeggings> ;
val bronzePaxel = <MekanismTools:BronzePaxel>;
val bronzePick = <MekanismTools:BronzePickaxe>;
val bronzeShovel = <MekanismTools:BronzeShovel>;
val bronzeSword = <MekanismTools:BronzeSword>;
val diamondPaxel = <MekanismTools:DiamondPaxel>;
val glowstoneAxe = <MekanismTools:GlowstoneAxe>;
val glowstoneBoots = <MekanismTools:GlowstoneBoots>;
val glowstoneChestplate = <MekanismTools:GlowstoneChestplate>;
val glowstoneHelmet = <MekanismTools:GlowstoneHelmet>;
val glowstoneHoe = <MekanismTools:GlowstoneHoe>;
val glowstoneLeggings = <MekanismTools:GlowstoneLeggings> ;
val glowstonePaxel = <MekanismTools:GlowstonePaxel>;
val glowstonePick = <MekanismTools:GlowstonePickaxe>;
val glowstoneShovel = <MekanismTools:GlowstoneShovel>;
val glowstoneSword = <MekanismTools:GlowstoneSword>;
val ironPaxel = <MekanismTools:IronPaxel>;
val lapisLazuliAxe = <MekanismTools:LapisLazuliAxe>;
val lapisLazuliBoots = <MekanismTools:LapisLazuliBoots>;
val lapisLazuliChestplate = <MekanismTools:LapisLazuliChestplate>;
val lapisLazuliHelmet = <MekanismTools:LapisLazuliHelmet>;
val lapisLazuliHoe = <MekanismTools:LapisLazuliHoe>;
val lapisLazuliLeggings = <MekanismTools:LapisLazuliLeggings> ;
val lapisLazuliPaxel = <MekanismTools:LapisLazuliPaxel>;
val lapisLazuliPick = <MekanismTools:LapisLazuliPickaxe>;
val lapisLazuliShovel = <MekanismTools:LapisLazuliShovel>;
val lapisLazuliSword = <MekanismTools:LapisLazuliSword>;
val obsidianAxe = <MekanismTools:ObsidianAxe>;
val obsidianBoots = <MekanismTools:ObsidianBoots>;
val obsidianChestplate = <MekanismTools:ObsidianChestplate>;
val obsidianHelmet = <MekanismTools:ObsidianHelmet>;
val obsidianHoe = <MekanismTools:ObsidianHoe>;
val obsidianLeggings = <MekanismTools:ObsidianLeggings> ;
val obsidianPaxel = <MekanismTools:ObsidianPaxel>;
val obsidianPick = <MekanismTools:ObsidianPickaxe>;
val obsidianShovel = <MekanismTools:ObsidianShovel>;
val obsidianSword = <MekanismTools:ObsidianSword>;
val osmiumAxe = <MekanismTools:OsmiumAxe>;
val osmiumBoots = <MekanismTools:OsmiumBoots>;
val osmiumChestplate = <MekanismTools:OsmiumChestplate>;
val osmiumHelmet = <MekanismTools:OsmiumHelmet>;
val osmiumHoe = <MekanismTools:OsmiumHoe>;
val osmiumLeggings = <MekanismTools:OsmiumLeggings> ;
val osmiumPaxel = <MekanismTools:OsmiumPaxel>;
val osmiumPick = <MekanismTools:OsmiumPickaxe>;
val osmiumShovel = <MekanismTools:OsmiumShovel>;
val osmiumSword = <MekanismTools:OsmiumSword>;
val steelAxe = <MekanismTools:SteelAxe>;
val steelBoots = <MekanismTools:SteelBoots>;
val steelChestplate = <MekanismTools:SteelChestplate>;
val steelHelmet = <MekanismTools:SteelHelmet>;
val steelHoe = <MekanismTools:SteelHoe>;
val steelLeggings = <MekanismTools:SteelLeggings> ;
val steelPaxel = <MekanismTools:SteelPaxel>;
val steelPick = <MekanismTools:SteelPickaxe>;
val steelShovel = <MekanismTools:SteelShovel>;
val steelSword = <MekanismTools:SteelSword>;
val stonePaxel = <MekanismTools:StonePaxel>;
val woodPaxel = <MekanismTools:WoodPaxel>;

##Mystcraft
val blockBookBinder = <Mystcraft:BlockBookBinder>;
val blockBookReceptacle = <Mystcraft:BlockBookReceptacle>;
val blockBookstand = <Mystcraft:BlockBookstand>;
val blockCrystal = <Mystcraft:BlockCrystal>;
val blockDecay = <Mystcraft:BlockDecay>;
val blackInk = <Mystcraft:BlockFluidMyst>;
val inkMixer = <Mystcraft:BlockInkMixer>;
val lectern = <Mystcraft:BlockLectern>;
val blockLinkModifier = <Mystcraft:BlockLinkModifier>;
val blockStarFissure = <Mystcraft:BlockStarFissure>;
val linkPortal = <Mystcraft:LinkPortal>;
val writingDesk = <Mystcraft:WritingDesk>;
val descriptiveBook = <Mystcraft:agebook>;
val linkBook = <Mystcraft:linkbook>;
val notebook = <Mystcraft:notebook>;
val page = <Mystcraft:page>;
val unlinkedBook = <Mystcraft:unlinkedbook> ;
val inkVial = <Mystcraft:vial>;
val writingdesk = <Mystcraft:writingdesk>;

##OpenComputers
val analyzer = <OpenComputers:item>;
val keyboard = <OpenComputers:keyboard>
val adapter = <OpenComputers:simple>;
val computerCase = <OpenComputers:simple_redstone>;
val cable = <OpenComputers:special>;
val robot = <OpenComputers:special_redstone>;

##Thermal Foundation  
val ironDust = <ThermalFoundation:material>;
val pyroDust = <ThermalFoundation:material:512>;
val cyroDust = <ThermalFoundation:material:513>;
val manaDust = <ThermalFoundation:material:514>;
val copperOreDict = <ore:oreCopper>;
val copperOre = <ThermalFoundation:Ore>;
var tinOre = <ThermalFoundation:Ore:1>;
val silverOre = <ThermalFoundation:Ore:2>;
val leadOre = <ThermalFoundation:Ore:3>;
val ferrousOre = <ThermalFoundation:Ore:4>;
val shinyOre = <ThermalFoundation:Ore:5>;
val manaOre = <ThermalFoundation:Ore:6>;
val desRedstoneBucket = <ThermalFoundation:bucket>;
val enerBucket = <ThermalFoundation:bucket:2>;
val panarGlowstoneBucket = <ThermalFoundation:bucket:1>;
val resEnderBucket = <ThermalFoundation:bucket:5>;
val copperBlock = <yroBucket = <ThermalFoundation:bucket:3>;
val cyroBucket = <ThermalFoundation:bucket:4>;
val copperBlock = <ThermalFoundation:Storage>;
val tinBlock = <ThermalFoundation:Storage:1>;
val silverBlock = <ThermalFoundation:Storage:2>;
val leadBlock = <ThermalFoundation:Storage:3>;
val ferrousBlock = <ThermalFoundation:Storage:4>;
val shinyBlock = <ThermalFoundation:Storage:5>;
val manaBlock = <ThermalFoundation:Storage:6>;

##Minecraft
val slimeBall = <minecraft:slime_ball>;
val lavaBucket = <minecraft:lava_bucket>;
val ironIngot = <minecraft:iron_ingot>;
val goldIngot = <minecraft:gold_ingot>;
val ironPick = <minecraft:iron_pickaxe>;

##FLORA
val hardenedBoots = <flora:item.HardenedBoots>;
val hardenedChestplate = <flora:item.HardenedChestplate>;
val hardenedHelm = <flora:item.HardenedHelm>;
val hardenedLeggings = <flora:item.HardenedLeggings>;
val leadstoneBoots = <flora:item.LeadstoneBoots>;
val leadstoneChestplate = <flora:item.LeadstoneChestplate>;
val leadstoneHelm = <flora:item.LeadstoneHelm>;
val leadstoneLeggings = <flora:item.LeadstoneLeggings>;
val redstoneBoots = <flora:item.RedstoneBoots>;
val redstoneChestplate = <flora:item.RedstoneChestplate>;
val redstoneHelm = <flora:item.RedstoneHelm>;
val redstoneLeggings = <flora:item.RedstoneLeggings>;
val resonantBoots = <flora:item.ResonantBoots>;
val resonantChestplate = <flora:item.ResonantChestplate>;
val resonantHelm = <flora:item.ResonantHelm>;
val resonantLeggings = <flora:item.ResonantLeggings>;
val fluidicInfuser = <flora:tile.FLORAInfuser>;

##Santa’s Decor
val blazeBrick = <santasdecor:blaze_brick>;
val chiseledBlazeBrick = <santasdecor:blaze_chiseled>;
val chiseledBlazeQuartz = <santasdecor:blaze_chiseled_quartz>;
val blazeCobblestone = <santasdecor:blaze_cobble>;
val blazeLog = <santasdecor:blaze_log>;
val blazePillar = <santasdecor:blaze_pillar>;
val blazePlank = <santasdecor:blaze_plank>;
val blazeQuartz = <santasdecor:blaze_quartz>;
val blazeStone = <santasdecor:blaze_stone>;
val boneBrick = <santasdecor:bone_brick>;
val chiseledBoneBrick = <santasdecor:bone_chiseled>;
val boneCobblestone = <santasdecor:bone_cobble>;
val boneLog = <santasdecor:bone_log>;
val bonePlank = <santasdecor:bone_plank> ;
val boneStone = <santasdecor:bone_stone>;
val burntBricks = <santasdecor:burnt_brick>;
val chiseledBurntBricks = <santasdecor:burnt_chiseled>;
val chiseledBurntQuartz = <santasdecor:burnt_chiseled_quartz>;
val burntCobblestone = <santasdecor:burnt_cobble>;
val burntLog = <santasdecor:burnt_log>;
val burntPillar = <santasdecor:burnt_pillar_quartz>;
val burntPlank = <santasdecor:burnt_plank>;
val burntQuartz = <santasdecor:burnt_quartz>;
val burntStone = <santasdecor:burnt_stone>;
val enderBrick = <santasdecor:ender_brick>;
val chiseledEnderBrick = <santasdecor:ender_chiseled>;
val chiseledEnderQuartz = <santasdecor:ender_chiseled_quartz>;
val enderCobblestone = <santasdecor:ender_cobble>;
val enderLog = <santasdecor:ender_log>;
val enderPillar = <santasdecor:ender_pillar>;
val enderPlank = <santasdecor:ender_plank>;
val enderQuartz = <santasdecor:ender_quartz>;
val enderStone = <santasdecor:ender_stone>;
val fleshBrick = <santasdecor:flesh_brick>;
val chiseledFleshBrick = <santasdecor:flesh_chiseled>;
val fleshCobblestone = <santasdecor:flesh_cobble>;
val fleshLog = <santasdecor:flesh_log>;
val fleshPlank = <santasdecor:flesh_plank>;
val fleshStone = <santasdecor:flesh_stone>;
val icyBrick = <santasdecor:icy_brick>;
val chiseledIcyBrick = <santasdecor:icy_chiseled>;
val chiseledIcy Quartz = <santasdecor:icy_chiseled_quartz>;
val icyCobblestone = <santasdecor:icy_cobble>;
val icyLog = <santasdecor:icy_log>;
val icyPillar = <santasdecor:icy_pillar>;
val icyPlank = <santasdecor:icy_plank>;
val icyQuartz = <santasdecor:icy_quartz>;
val icyStone = <santasdecor:icy_stone>;
val leatherBrick = <santasdecor:leather_brick>;
val chiseledLeatherBrick = <santasdecor:leather_chiseled>;
val leatherCobblestone = <santasdecor:leather_cobble>;
val leatherLog = <santasdecor:leather_log>;
val leatherPlank = <santasdecor:leather_plank>;
val leatherStone = <santasdecor:leather_stone>;
val slimyBrick = <santasdecor:slimy_brick>;
val chiseledSlimyBrick = <santasdecor:slimy_chiseled>;
val chiseledSlimyQuartz = <santasdecor:slimy_chiseled_quartz>;
val slimyCobblestone = <santasdecor:slimy_cobble>;
val slimyLog = <santasdecor:slimy_log>;
val slimyPillar = <santasdecor:slimy_pillar_quartz>;
val slimyPlank = <santasdecor:slimy_plank> ;
val slimyQuartz = <santasdecor:slimy_quartz>;
val slimyStone = <santasdecor:slimy_stone>;
val snowyBrick = <santasdecor:snowy_brick>;
val chiseledSnowyBrick = <santasdecor:snowy_chiseled>;
val snowyCobblestone = <santasdecor:snowy_cobble>;
val snowyLog = <santasdecor:snowy_log>;
val snowyPlank = <santasdecor:snowy_plank>;
val snowyStone = <santasdecor:snowy_stone>;

##Santa’s Toys
val enderBlaster = <santastoys:ender_blaster>;
val match = <santastoys:match>;
val netherBlaster = <santastoys:nether_blaster>; 

##Witchery
val waterArtichokeSeeds = <witchery:seedsartichoke>; 
val belladonnaSeeds = <witchery:seedsbelladonna>;
val mandrakeSeeds = <witchery:seedsmandrake>;
val minedrakeBulb = <witchery:seedsmindrake>;
val snowbellSeeds = <witchery:seedssnowbell>;
val wormwoodSeeds = <witchery:seedswormwood>; 
val seepingShoes = <witchery:seepingshoes>;
val poppetshelfCompass = <witchery:shelfcompass>;  
val snowbell = <witchery:snowbell>; 
val wispyCotton =  <witchery:somniancotton>; 
val spanishMoss = <witchery:spanishmoss>;
val spectralStone = <witchery:spectralstone>;
val spinningWheel = <witchery:spinningwheel>; 
val flowingSpirit = <witchery:spiritflowing>; 
val spiritPortal = <witchery:spiritportal>;
val alderStairs = <witchery:stairswoodalder>;
val hawthornStairs = <witchery:stairswoodhawthorn>; 
val rowanStairs = <witchery:stairswoodrowan>;
val statueoftheGoddess = <witchery:statuegoddess>;
val statueofhobgoblinPatron = <witchery:statueofworship>; 
val oakStockade = <witchery:stockade>;  
val taglockKit = <witchery:taglockkit>;
val tormentPortal = <witchery:tormentportal>; 
val tormentStone = <witchery:tormentstone>; 
val trentEffigy = <witchery:trent>;
val voidBramble = <witchery:voidbramble>;
val wickerBundle = <witchery:wickerbundle>;
val witchesOvenBurning =  <witchery:witchesovenburning>;
val witchesOven =  <witchery:witchesovenidle>;
val witchHand = <witchery:witchhand>; 
val witchesHat = <witchery:witchhat>;
val rowanLeaves = <witchery:witchleaves>;  
val rowanWood = <witchery:witchlog>;
val witchesRobes = <witchery:witchrobe>;
val rowanSapling = <witchery:witchsapling>;  
val witchLadder = <witchery:witchsladder>; 
val rowanPlanks = <witchery:witchwood>;
val rowanSlabDouble = <witchery:witchwooddoubleslab>; 
val rowanSlab = <witchery:witchwoodslab>; 
val wormwood = <witchery:wormwood>;
val alderWoodDoor = <witchery:alderwooddoor>;
val alluringSkull = <witchery:alluringskull>;
val altar = <witchery:altar>;
val arthana = <witchery:arthana>;
val waterArtichoke = <witchery:artichoke>;
val babaYagasHat = <witchery:babashat>; 
val barkBelt = <witchery:barkbelt>; 
val barrier = <witchery:barrier>;
val belladonna = <witchery:belladonna>; 
val bitingBelt = <witchery:bitingbelt>;
val bloodPoppy = <witchery:bloodrose>; 
val boline = <witchery:boline>;
val enderBramble = <witchery:bramble>;  
val brazier = <witchery:brazier>;
val brewBag = <witchery:brewbag>;
val hollowTearsBucket = <witchery:buckethollowtears>; 
val spiritBucket = <witchery:bucketspirit>; 
val candelabra = <witchery:candelabra>; 
val chalice = <witchery:chalice>;
val goldenChalk = <witchery:chalkheart>;
val infernalChalk = <witchery:chalkinfernal>;
val otherwhereChalk = <witchery:chalkotherwhere>; 
val ritualChalk = <witchery:chalkritual>;  
val heartGlyph = <witchery:circle>;
val infernalGlyph = <witchery:circleglyphinfernal>;
val otherwhereGlyph = <witchery:circleglyphotherwhere>;
val ritualGlyph = <witchery:circleglyphritual>;
val circleTalisman = <witchery:circletalisman>;
val critterSnare = <witchery:crittersnare>;
val crystalBall: <witchery:crystalball>;
val deathsHood = <witchery:deathscowl>;
val deathsFootwear = <witchery:deathsfeet>;
val deathsHand = <witchery:deathshand>;
val deathsRobe = <witchery:deathsrobe>;
val statueBrokenCurses = <witchery:decursedirected>;
val statueOccludedSummons = <witchery:decurseteleport>;
val demonHeart = <witchery:demonheart>;
val devilsTongueCharm = <witchery:devilstonguecharm>;
val distilleryBurning = <witchery:distilleryburning>;
val distillery = <witchery:distilleryidle>;
val lavaDiviner = <witchery:divinerlava>; 
val waterDiviner = <witchery:divinerwater>;
val dreamWeaver = <witchery:dreamcatcher>;
val staffDuplication = <witchery:dupstaff>;
val emberMoss = <witchery:embermoss>;
val filteredFumeFunnel = <witchery:filteredfumefunnel>;
val solid = <witchery:force>;
val fumeFunnel = <witchery:fumefunnel>;
val glintWeed = <witchery:glintweed>;
val glowGlobe = <witchery:glowglobe>;
val Grassper = <witchery:grassper>;
val gulgsGurdle = <witchery:gurdleofgulg>;
val pistolCrossbow = <witchery:handbow>; 
val flowingSpirit = <witchery:hollowtears>;
val witchHunterBoots = <witchery:hunterboots>;
val witchHunterCoat = <witchery:huntercoat>;
val witchHunterHat = <witchery:hunterhat>;
val witchHunterTrousers = <witchery:hunterlegs>;
val spearHuntsman = <witchery:huntsmanspear>;
val icySlippers = <witchery:iceslippers>;
val infinityEgg = <witchery:infinityegg>;
val candelabra = <witchery:ingredient>;
val kettle = <witchery:kettle>;
val kobolditePick = <witchery:kobolditepickaxe>; 
val leapingLily = <witchery:leapinglily>;
val leechChest = <witchery:leechchest>;
val parasyticLouse = <witchery:louse>;
val mandrake = <witchery:mandrake>;
val minedrake = <witchery:mindrake>;
val mutatingSprig = <witchery:mutator>;
val mysticBranch = <witchery:mysticbranch>;
val necromancerRobes = <witchery:necromancerrobe>;
val perpetualIce = <witchery:perpetualice>;
val poppyWebs = <witchery:plantmine>;
val polynesiaCharm = <witchery:polynesiacharm>;
val poppet = <witchery:poppet>;
val poppetShelf = <witchery:poppetshelf>;
val universalAntidote = <witchery:potion>;
val mogsQuiver = <witchery:quiverofmog>;
val refillingChest = <witchery:refillingchest>;
val rowanWoodDoor = <witchery:rowanwooddoor>;
val rubySlippers = <witchery:rubyslippers>;
val scarecrow = <witchery:scarecrow>;

##Santas Decor
val blazeBrick = <santasdecor:blaze_brick>;
val chiseledBlazeBrick = <santasdecor:blaze_chiseled>;
val chiseledBlazeQuartz = <santasdecor:blaze_chiseled_quartz>;
val blazeCobblestone = <santasdecor:blaze_cobble>;
val blazeLog = <santasdecor:blaze_log>;
val blazePillar = <santasdecor:blaze_pillar>;
val blazePlank = <santasdecor:blaze_plank>;
val blazeQuartz = <santasdecor:blaze_quartz>;
val blazeStone = <santasdecor:blaze_stone>;
val boneBrick = <santasdecor:bone_brick>;
val chiseledBoneBrick = <santasdecor:bone_chiseled>;
val boneCobblestone = <santasdecor:bone_cobble>;
val boneLog = <santasdecor:bone_log>;
val bonePlank = <santasdecor:bone_plank> ;
val boneStone = <santasdecor:bone_stone>;
val burntBricks = <santasdecor:burnt_brick>;
val chiseledBurntBricks = <santasdecor:burnt_chiseled>;
val chiseledBurntQuartz = <santasdecor:burnt_chiseled_quartz>;
val burntCobblestone = <santasdecor:burnt_cobble>;
val burntLog = <santasdecor:burnt_log>;
val burntPillar = <santasdecor:burnt_pillar_quartz>;
val burntPlank = <santasdecor:burnt_plank>;
val burntQuartz = <santasdecor:burnt_quartz>;
val burntStone = <santasdecor:burnt_stone>;
val enderBrick = <santasdecor:ender_brick>;
val chiseledEnderBrick = <santasdecor:ender_chiseled>;
val chiseledEnderQuartz = <santasdecor:ender_chiseled_quartz>;
val enderCobblestone = <santasdecor:ender_cobble>;
val enderLog = <santasdecor:ender_log>;
val enderPillar = <santasdecor:ender_pillar>;
val enderPlank = <santasdecor:ender_plank>;
val enderQuartz = <santasdecor:ender_quartz>;
val enderStone = <santasdecor:ender_stone>;
val fleshBrick = <santasdecor:flesh_brick>;
val chiseledFleshBrick = <santasdecor:flesh_chiseled>;
val fleshCobblestone = <santasdecor:flesh_cobble>;
val fleshLog = <santasdecor:flesh_log>;
val fleshPlank = <santasdecor:flesh_plank>;
val fleshStone = <santasdecor:flesh_stone>;
val icyBrick = <santasdecor:icy_brick>;
val chiseledIcyBrick = <santasdecor:icy_chiseled>;
val chiseledIcy Quartz = <santasdecor:icy_chiseled_quartz>;
val icyCobblestone = <santasdecor:icy_cobble>;
val icyLog = <santasdecor:icy_log>;
val icyPillar = <santasdecor:icy_pillar>;
val icyPlank = <santasdecor:icy_plank>;
val icyQuartz = <santasdecor:icy_quartz>;
val icyStone = <santasdecor:icy_stone>;
val leatherBrick = <santasdecor:leather_brick>;
val chiseledLeatherBrick = <santasdecor:leather_chiseled>;
val leatherCobblestone = <santasdecor:leather_cobble>;
val leatherLog = <santasdecor:leather_log>;
val leatherPlank = <santasdecor:leather_plank>;
val leatherStone = <santasdecor:leather_stone>;
val slimyBrick = <santasdecor:slimy_brick>;
val chiseledSlimyBrick = <santasdecor:slimy_chiseled>;
val chiseledSlimyQuartz = <santasdecor:slimy_chiseled_quartz>;
val slimyCobblestone = <santasdecor:slimy_cobble>;
val slimyLog = <santasdecor:slimy_log>;
val slimyPillar = <santasdecor:slimy_pillar_quartz>;
val slimyPlank = <santasdecor:slimy_plank> ;
val slimyQuartz = <santasdecor:slimy_quartz>;
val slimyStone = <santasdecor:slimy_stone>;
val snowyBrick = <santasdecor:snowy_brick>;
val chiseledSnowyBrick = <santasdecor:snowy_chiseled>;
val snowyCobblestone = <santasdecor:snowy_cobble>;
val snowyLog = <santasdecor:snowy_log>;
val snowyPlank = <santasdecor:snowy_plank>;
val snowyStone = <santasdecor:snowy_stone>;

##SantasToys
val enderBlaster = <santastoys:ender_blaster>;
val match = <santastoys:match>;
val netherBlaster = <santastoys:nether_blaster>; 


