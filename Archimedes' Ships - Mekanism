##Archimedes Ships
val shipHelm = <ArchimedesShips:marker>;
val floater = <ArchimedesShips:floater>;
val balloonWhite = <ArchimedesShips:balloon>;
val balloonOrange = <ArchimedesShips:balloon:1>;
val balloonMagenta = <ArchimedesShips:balloon:2>;
val balloonBlueLight = <ArchimedesShips:balloon:3>;
val balloonYellow = <ArchimedesShips:balloon:4>;
val balloonLime = <ArchimedesShips:balloon:5>;
val balloonPink = <ArchimedesShips:balloon:6>;
val balloonGray = <ArchimedesShips:balloon:7>;
val balloonSilver = <ArchimedesShips:balloon:8>;
val balloonCyan = <ArchimedesShips:balloon:9>;
val balloonPurple = <ArchimedesShips:balloon:10>;
val balloonBlue = <ArchimedesShips:balloon:11>;
val balloonBrown = <ArchimedesShips:balloon:12>;
val balloonGreen = <ArchimedesShips:balloon:13>;
val balloonRed = <ArchimedesShips:balloon:14>;
val balloonBlack = <ArchimedesShips:balloon:15>;
val gaugeBasic = <ArchimedesShips:gauge>;
val gaugeAdvanced = <ArchimedesShips:gauge:1>;
val seatPassenger = <ArchimedesShips:seat>;
val bufferShore = <ArchimedesShips:buffer>;
val engineSteam = <ArchimedesShips:engine>;
val crateWood = <ArchimedesShips:crate_wood>;
val allBalloons = <<ArchimedesShips:balloon:*>;

##Mekanism
val armoredJetpack = <Mekanism:ArmoredJetpack>;
val atomicDisassembler = <Mekanism:AtomicDisassembler>;
val Balloon = <Mekanism:Balloon>;
val osmiumBlock = <Mekanism:BasicBlock>;
val salinationBlock = <Mekanism:BasicBlock2>;
val mekBiofuel = <Mekanism:BioFuel>;
val boundingBlock = <Mekanism:BoundingBlock>;
val brineBucket = <Mekanism:BrineBucket>;
val cardboardBox = <Mekanism:CardboardBox>;
val oreClump = <Mekanism:Clump>;
val compressedCarbon = <Mekanism:CompressedCarbon>;
val compressedDiamond = <Mekanism:CompressedDiamond>;
val compressedObsidian = <Mekanism:CompressedObsidian>;
val compressedRedstone = <Mekanism:CompressedRedstone>;
val configurator = <Mekanism:Configurator>;
val controlCircuit = <Mekanism:ControlCircuit>;
val oreCrystal = <Mekanism:Crystal>;
val dictionary = <Mekanism:Dictionary>;
val oreDirtyDust = <Mekanism:DirtyDust>;
val oreDust = <Mekanism:Dust>;
val electricBow = <Mekanism:ElectricBow>;
val electrolyticCore = <Mekanism:ElectrolyticCore>;
val energyCube = <Mekanism:EnergyCube>;
val energyTablet = <Mekanism:EnergyTablet>;
val energyUpgrade = <Mekanism:EnergyUpgrade>;
val enrichedAlloy = <Mekanism:EnrichedAlloy>;
val enrichedIron = <Mekanism:EnrichedIron>;
val filterCard = <Mekanism:FilterCard>;
val frictionBoots = <Mekanism:FrictionBoots>;
val gasMask = <Mekanism:GasMask>;
val gasTank = <Mekanism:GasTank>;
val glowPanel = <Mekanism:GlowPanel>;
val glowPlasticBlock = <Mekanism:GlowPlasticBlock>;
val ingot = <Mekanism:Ingot>;
val mekItemProxy = <Mekanism:ItemProxy>;
val jetpack = <Mekanism:Jetpack>;
val enrichmentChamber = <Mekanism:MachineBlock>;
val rotaryCondensentrator = <Mekanism:MachineBlock2>;
val networkReader = <Mekanism:NetworkReader>;
val obsidianTNT = <Mekanism:ObsidianTNT>;
val oreBlock = <Mekanism:OreBlock>;
val cable = <Mekanism:PartTransmitter>;
val plasticBlock = <Mekanism:PlasticBlock>;
val plasticFence = <Mekanism:PlasticFence>;
val hdpePellet = <Mekanism:Polyethene>;
val portableTeleporter = <Mekanism:PortableTeleporter>;
val reinforcedAlloy = <Mekanism:ReinforcedAlloy>;
val reinforcedPlasticBlock = <Mekanism:ReinforcedPlasticBlock>;
val roadPlasticBlock = <Mekanism:RoadPlasticBlock>;
val robit = <Mekanism:Robit>;
val salt = <Mekanism:Salt>;
val saltBlock = <Mekanism:SaltBlock>;
val sawdust = <Mekanism:Sawdust>;
val scubaTank = <Mekanism:ScubaTank>;
val seismicReader = <Mekanism:SeismicReader>;
val oreShard = <Mekanism:Shard>;
val slickPlasticBlock = <Mekanism:SlickPlasticBlock>;
val speedUpgrade = <Mekanism:SpeedUpgrade>;
val substrate = <Mekanism:Substrate>;
val teleportationCore = <Mekanism:TeleportationCore>;
val walkieTalkie = <Mekanism:WalkieTalkie>;
val heatGenerator = <MekanismGenerators:Generator>;
val solarPanel = <MekanismGenerators:SolarPanel>;
val bronzeAxe = <MekanismTools:BronzeAxe>;
val bronzeBoots = <MekanismTools:BronzeBoots>;
val bronzeChestplate = <MekanismTools:BronzeChestplate>;
val bronzeHelmet = <MekanismTools:BronzeHelmet>;
val bronzeHoe = <MekanismTools:BronzeHoe>;
val bronzeLeggings = <MekanismTools:BronzeLeggings> ;
val bronzePaxel = <MekanismTools:BronzePaxel>;
val bronzePick = <MekanismTools:BronzePickaxe>;
val bronzeShovel = <MekanismTools:BronzeShovel>;
val bronzeSword = <MekanismTools:BronzeSword>;
val diamondPaxel = <MekanismTools:DiamondPaxel>;
val glowstoneAxe = <MekanismTools:GlowstoneAxe>;
val glowstoneBoots = <MekanismTools:GlowstoneBoots>;
val glowstoneChestplate = <MekanismTools:GlowstoneChestplate>;
val glowstoneHelmet = <MekanismTools:GlowstoneHelmet>;
val glowstoneHoe = <MekanismTools:GlowstoneHoe>;
val glowstoneLeggings = <MekanismTools:GlowstoneLeggings> ;
val glowstonePaxel = <MekanismTools:GlowstonePaxel>;
val glowstonePick = <MekanismTools:GlowstonePickaxe>;
val glowstoneShovel = <MekanismTools:GlowstoneShovel>;
val glowstoneSword = <MekanismTools:GlowstoneSword>;
val ironPaxel = <MekanismTools:IronPaxel>;
val lapisLazuliAxe = <MekanismTools:LapisLazuliAxe>;
val lapisLazuliBoots = <MekanismTools:LapisLazuliBoots>;
val lapisLazuliChestplate = <MekanismTools:LapisLazuliChestplate>;
val lapisLazuliHelmet = <MekanismTools:LapisLazuliHelmet>;
val lapisLazuliHoe = <MekanismTools:LapisLazuliHoe>;
val lapisLazuliLeggings = <MekanismTools:LapisLazuliLeggings> ;
val lapisLazuliPaxel = <MekanismTools:LapisLazuliPaxel>;
val lapisLazuliPick = <MekanismTools:LapisLazuliPickaxe>;
val lapisLazuliShovel = <MekanismTools:LapisLazuliShovel>;
val lapisLazuliSword = <MekanismTools:LapisLazuliSword>;
val obsidianAxe = <MekanismTools:ObsidianAxe>;
val obsidianBoots = <MekanismTools:ObsidianBoots>;
val obsidianChestplate = <MekanismTools:ObsidianChestplate>;
val obsidianHelmet = <MekanismTools:ObsidianHelmet>;
val obsidianHoe = <MekanismTools:ObsidianHoe>;
val obsidianLeggings = <MekanismTools:ObsidianLeggings> ;
val obsidianPaxel = <MekanismTools:ObsidianPaxel>;
val obsidianPick = <MekanismTools:ObsidianPickaxe>;
val obsidianShovel = <MekanismTools:ObsidianShovel>;
val obsidianSword = <MekanismTools:ObsidianSword>;
val osmiumAxe = <MekanismTools:OsmiumAxe>;
val osmiumBoots = <MekanismTools:OsmiumBoots>;
val osmiumChestplate = <MekanismTools:OsmiumChestplate>;
val osmiumHelmet = <MekanismTools:OsmiumHelmet>;
val osmiumHoe = <MekanismTools:OsmiumHoe>;
val osmiumLeggings = <MekanismTools:OsmiumLeggings> ;
val osmiumPaxel = <MekanismTools:OsmiumPaxel>;
val osmiumPick = <MekanismTools:OsmiumPickaxe>;
val osmiumShovel = <MekanismTools:OsmiumShovel>;
val osmiumSword = <MekanismTools:OsmiumSword>;
val steelAxe = <MekanismTools:SteelAxe>;
val steelBoots = <MekanismTools:SteelBoots>;
val steelChestplate = <MekanismTools:SteelChestplate>;
val steelHelmet = <MekanismTools:SteelHelmet>;
val steelHoe = <MekanismTools:SteelHoe>;
val steelLeggings = <MekanismTools:SteelLeggings> ;
val steelPaxel = <MekanismTools:SteelPaxel>;
val steelPick = <MekanismTools:SteelPickaxe>;
val steelShovel = <MekanismTools:SteelShovel>;
val steelSword = <MekanismTools:SteelSword>;
val stonePaxel = <MekanismTools:StonePaxel>;
val woodPaxel = <MekanismTools:WoodPaxel>;

##Recipes
recipes.remove(shipHelm);
recipes.remove(floater);
recipes.remove(allBalloons);
recipes.remove(gaugeBasic);
recipes.remove(gaugeAdvanced);
recipes.remove(seatPassenger);
recipes.remove(bufferShore);
recipes.remove(engineSteam);
recipes.remove(crateWood);
recipes.addShaped(shipHelm, [[minecraft:lever, minecraft:glass, minecraft:lever], [minecraft:iron_ingot, controlCircuit, minecraft:iron_ingot], [minecraft:iron_ingot, minecraft:iron_ingot, minecraft:iron_ingot]]);
recipes.addShaped(gaugeBasic, [[minecraft:glass, minecraft:compass, minecraft:glass], [minecraft:iron_ingot, controlCircuit, minecraft:iron_ingot], [minecraft:iron_ingot, minecraft:iron_ingot, minecraft:iron_ingot]]);

//Must remain here.
print("AS-Mek Script Loaded.");
